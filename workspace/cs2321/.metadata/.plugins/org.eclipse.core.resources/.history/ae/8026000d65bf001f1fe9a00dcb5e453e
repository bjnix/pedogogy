package cs2321;

import java.io.FileOutputStream;
import java.io.*;
import java.util.*;


public class Assignment2 {
	static public void main( String [] args )
	{
		ArraySequence<Integer> arrList = new ArraySequence<Integer>();
		LinkedSequence<Integer> lnkList = new LinkedSequence<Integer>();
		long sTime = 0;
		long sampleT = 0;
		int n = 0; 
		FileOutputStream out; // declare a file output object
		PrintStream p; // declare a print stream object
		//		//////////////////////////////////////////////////add last
		//				try
		//				{
		//					// Create a new file output stream
		//					// connected to "myfile.txt"
		//					out = new FileOutputStream("addLastresultArr.csv");
		//		
		//					// Connect print stream to the output stream
		//					p = new PrintStream( out );
		//									
		//					for( int i = 0 ; i < 5000 ; i ++ )
		//					{
		//						sTime = System.nanoTime();
		//						arrList.addLast(n);
		//						sampleT = System.nanoTime();
		//						p.println ((sampleT - sTime) + ", " + n);
		//						n = n + 1;//increment n
		//					}
		//					p.close();
		//				}
		//				catch (Exception e)
		//				{
		//					System.err.println ("Error writing to file");
		//				}
		//				/////////////////////////////////////addlast lnked
		//				try
		//				{
		//					n = 0;
		//					// Create a new file output stream
		//					// connected to "myfile.txt"
		//					out = new FileOutputStream("addLastresultLnk.csv");
		//		
		//					// Connect print stream to the output stream
		//					p = new PrintStream( out );
		//									
		//					for( int i = 0 ; i < 5000 ; i ++ )
		//					{
		//						sTime = System.nanoTime();
		//						lnkList.addLast(n);
		//						sampleT = System.nanoTime();
		//						p.println ((sampleT - sTime) + ", " + n);
		//						n = n + 1;//increment n
		//					}
		//					p.close();
		//				}
		//				catch (Exception e)
		//				{
		//					System.err.println ("Error writing to file");
		//				}
		//				////////////////////////////////////////////add first
		//				try
		//				{
		//					n = 0;
		//					// Create a new file output stream
		//					// connected to "myfile.txt"
		//					out = new FileOutputStream("addFirstresultArr.csv");
		//		
		//					// Connect print stream to the output stream
		//					p = new PrintStream( out );
		//					
		//					for( int i = 0 ; i < 5000 ; i ++ )
		//					{
		//						sTime = System.nanoTime();
		//						arrList.addFirst(n);
		//						sampleT = System.nanoTime();
		//						p.println ((sampleT - sTime) + ", " + n);
		//						n = n + 1;//increment n
		//					}
		//					p.close();
		//				}
		//				catch (Exception e)
		//				{
		//					System.err.println ("Error writing to file");
		//				}
		//				
		//				////////////////////////////////////////////add first lnked
		//				try
		//				{
		//					n = 0;
		//					// Create a new file output stream
		//					// connected to "myfile.txt"
		//					out = new FileOutputStream("addFirstresultLnk.csv");
		//		
		//					// Connect print stream to the output stream
		//					p = new PrintStream( out );
		//					
		//					for( int i = 0 ; i < 5000 ; i ++ )
		//					{
		//						sTime = System.nanoTime();
		//						lnkList.addFirst(n);
		//						sampleT = System.nanoTime();
		//						p.println ((sampleT - sTime) + ", " + n);
		//						n = n + 1;//increment n
		//					}
		//					p.close();
		//				}
		//				catch (Exception e)
		//				{
		//					System.err.println ("Error writing to file");
		//				}
		/////////-------------------addfirst test
		try
		{
			out = new FileOutputStream("Assign2Experiment1.csv");
			p = new PrintStream( out );

			for( int j = 1 ; j < 101 ; j ++ )
			{
				Vector<Long> AFLinked = new Vector<Long>();
				Vector<Long> AFArr = new Vector<Long>();

				for( int i = 0 ; i < 5000 ; i ++ )
				{
					sTime = System.nanoTime();
					lnkList = new LinkedSequence<Integer>();

					for(int k = 0 ; k < j ; k++)
					{
						lnkList.addFirst(k);
					}
					sampleT = System.nanoTime();
					AFLinked.add( sampleT - sTime );

				}
				long AFL = 0;
				for( int i = 0 ; i < 5000 ; i ++ )
					AFL = AFL + AFLinked.elementAt(i);
				double AFl = ((double)AFL/5000);
				for( int i = 0 ; i < 5000 ; i ++ )
				{
					sTime = System.nanoTime();
					arrList = new ArraySequence<Integer>();

					for(int k = 0 ; k < j ; k++)
					{
						arrList.addFirst(k);
					}
					sampleT = System.nanoTime();
					AFArr.add( sampleT - sTime );

				}
				long AFA = 0;
				for( int i = 0 ; i < 5000 ; i ++ )
					AFA = AFA + AFArr.elementAt(i);
				double AFa = ((double)AFA/5000);
				p.println(j + ", " + AFl + ", " + AFa);
				System.out.println(j + ", " + AFl + ", " + AFa);



				p.close();
			}

		}
		catch (Exception e)
		{
			System.err.println ("Error writing to file");
		}
		//////////////////////////////-----------------------------


	}
}




