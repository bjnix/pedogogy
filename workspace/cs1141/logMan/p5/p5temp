/*
 * CS1141 PROGRAM_4
 * @author Brent Nix
 * stardate 21MAR2011
 *
 * this is a program that reads in a file called "userlog" containing a log of
 * when users have logged on to the system.
 * it then prints them out sorted.
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/types.h>

#define USER_PROCESS 8 /*normal process*/
#define LINESIZE 32
#define NAMESIZE 32
#define HOSTSIZE 256



/* 
 * struct for an entry line from the logfile
 */
	struct entry
	{
		short type;/*type of record*/
		pid_t pid;/*PID for login process*/
		char line[LINESIZE];/*device name of tty*/
		char id[4];/*terminal name suffix*/
		char user[NAMESIZE];/*username*/
		char host[HOSTSIZE];/*hostname for remote login || kernel ver.*/
	};
	typedef struct entry Entry; /*making my life easier*/

int main(int argc, char * argv[])
{
	/*declarations*/
	FILE * fp;
	int i;
	int temp;

	short ut_type;
	Entry ent[500];

	printf("--\n");
	fp = fopen("/var/log/wtmp", "rb");/*open file*/
	i = 0;
	if(fp)
	{
		while(!feof(fp)||i<50)
		{
			/*
			fread(ent[i].type, sizeof(short), 1, fp);
			
			fread(ent[i].pid, sizeof(pid_t), 1, fp);
			*/
			fread(ent[i].line, LINESIZE, 1, fp);
			printf("++\n");
			fread(ent[i].id, 4, 1, fp);
			fread(ent[i].user, NAMESIZE, 1, fp);
			fread(ent[i].host, HOSTSIZE, 1, fp);
			

			i++;
		}
		/*
		temp = fclose(*fp)
		if(temp == EOF)
		{
		printf("could not close filestream. Exiting...\n");
			exit(1);
		}
*/
		
		temp = i;
		i = 0;

		while(i < temp-1)/*print sorted list*/
		{
			printf("type: %i \tpid: %i \tline:%s \tid: %s \tuser: %s \thost: %s \n ", ent[i].type, ent[i].pid, ent[i].line, ent[i].id, ent[i].user, ent[i].host );

			i++;
		}
	}
	return(0);
}/* end main */ 

