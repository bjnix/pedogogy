Brent Nix
cs1141 HW4
(1).
	a. value of *( p + 3 ) : 14
	b. value of *( q - 3 ) : 34
	c. value of q - p : 4
	d. p < q : T
	e. *p < *q : F
(2).
	The  contents of the array will be { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, }
	up.c:
(3).

	#include <stdio.h>
	#include <string.h>

	#define NUM_OF(x)(sizeof(x)/sizeof*(x))

	int main( int argc, char * argv[] )
	{

		printf( "\tup.c:\n" );
		
		for( i = 0; i < argc; i++ )
		{
			if( ( argc[i] > 96 ) && ( argv[i] < 123 ) )
			{ argv[i] = argv[i] - 32; }
		}
		for( i = 0; i < argc; i++ )
		{ printf( "%c", str[i] ); }


		return 0;
	} 

(4).
	Grinch

(5).
	int delFoo( char *s )
	{
		char str[9] = "fofooofoo";
		int i;
		char *p = str;
		
		int state = 0;
		
		printf("%s\n", str);
		while( *( p + 2 ) )
		{
			if(  ( *p == 'f' )  && ( *( p + 1 ) == 'o' )  &&  ( *( p + 2 ) == 'o' ) ) 
			 {
				printf( "found foo\n" );
				state = 1;
				break;
			}
			p++;
		} 
		if( state )
		{
			while( *p ) 
			{
				printf("move\n");
				*p = *(p + 3);
				p++;
			}
		printf("%s\n", str);
		return (1);
		}
		printf("%s\n", str);
	return(0);
	}
