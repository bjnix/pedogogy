CS 1141 HW2
Brent Nix

1)
console will print out:
	
:	i = 0
:	i = 1
:

/* it is a program containing a loop who's "counter" is 'i' and with every 
	iteration prints the value of i. the loop only runs while 'i' is less
	than 2, hence the output */

2)

console will print out:

:	The value of mx now is 3 and my is 5
:

/* switch switches the values of mx and my */

3)
[A[?25h[?0cScript started on Fri 28 Jan 2011 07:04:11 AM EST
[bjnix@snobol ~]$ ./w[Khw2[K[K[KHW2-3
The sizes of the following formats are:
	short = 2
	int = 4
	float = 4
	long int = 4
	long long int = 4
	double = 8
[bjnix@snobol ~]$ exit
exit

Script done on Fri 28 Jan 2011 07:04:39 AM EST


#include <stdio.h>

/*
 * CS 1141 HW2-3
 * @author Brent Nix
 * date: 26JAN2011
 * a small program to print out the sizes(in bits) of different number formats
 */
 
int main()
{

	/* set values of vars */

	int s = sizeof(short);
	int i = sizeof(int);
	int f = sizeof(float);
	int l = sizeof(long int);
	int ll = sizeof(long long int);
	int d = sizeof(double);

	/* print out values to console */

	printf("The sizes of the following formats are:\n");
	printf("	short = %d\n",s);
	printf("	int = %d\n",i);
	printf("	float = %d\n",f);
	printf("	long int = %d\n",l);
	printf("	long long int = %d\n",l); 
	printf("	double = %d\n",d);


	return(0);
}


4)
it threw an error because the program refers to the program printf which hasn't 
been included. if stdio.h is included, this shouldn't be a problem.

5)
the outprint it would print out would be:
07 8 9
it prints out zero from the first line of code because 7-7 = 0 and 8++>9 = 0.
0 && 0 = 0

the reason why the next three digits are not "7 9 9" is because the scope of the 
increment in the first printf statement is only in that statement.

6)
yes these loops are the same because the first one evaluates i each time to see
if it is larger than zero, where the second one checks each time to see if i is
still "true". True is defined as not false; false beeing defined by zero.

so both loops will loop through printing until they reach a value of 0 for i.

7)
both loops are essentially the same, because a for loop is essentially a while
loop that has been derived for more specific cases, and their starting, ending,
and incrementation terms are all the same, meaning that their end results will
match.

8) 
the first and the third one are the same because they both evalutate i before
incrementing it. the second one increments i before it evaluates it.

9)
if ( ( n % 2 ) == 0 )
	printf("n is even\n");

10)
for ( int i = 1; i <= 128; i +=2 )
{
	printf( "%d ", i );
	i += 2;
}

11)
5 4 3 2
 
